{
    "ModuleName": "i11_wrap_matrix_vector_mul",
    "SourceFileName": "/home/synthara/VersalPrjs/LDRD/rtda_demo/aieml7/Work/aie/ir/i11_wrap_matrix_vector_mul.cpp",
    "StructTypes": [
        {
            "Name": "class.xf::dsp::aie::blas::matrix_vector_mul::matrix_vector_mul",
            "Size": 4
        },
        {
            "Name": "class.xf::dsp::aie::blas::matrix_vector_mul::kernelMatVecMulClass",
            "Size": 4
        },
        {
            "Name": "class.anon",
            "Size": 1
        },
        {
            "Name": "class.anon.6",
            "Size": 1
        },
        {
            "Name": "struct.aie::detail::utils::iteration_dim",
            "Size": 1
        },
        {
            "Name": "struct.xf::dsp::aie::blas::matrix_vector_mul::T_inputIF",
            "Size": 20
        },
        {
            "Name": "struct.xf::dsp::aie::blas::matrix_vector_mul::T_outputIF",
            "Size": 16
        },
        {
            "Name": "struct.adf::detail::io_buffer_base",
            "Size": 4
        },
        {
            "Name": "class.aie::vector",
            "Size": 32
        },
        {
            "Name": "class.aie::detail::vector_base",
            "Size": 32
        },
        {
            "Name": "struct.v8float",
            "Size": 32
        },
        {
            "Name": "struct.ipd.custom_type.v64int4.v64int4",
            "Size": 32
        },
        {
            "Name": "class.aie::accum",
            "Size": 32
        },
        {
            "Name": "class.aie::detail::accum_base",
            "Size": 32
        },
        {
            "Name": "struct.v8accfloat",
            "Size": 32
        },
        {
            "Name": "struct.ipd.custom_type.v8acc32.v8acc32",
            "Size": 32
        },
        {
            "Name": "class.aie::vector_elem_ref",
            "Size": 8
        },
        {
            "Name": "struct.aie::unary_op",
            "Size": 32
        },
        {
            "Name": "struct.aie::unary_op_common",
            "Size": 32
        },
        {
            "Name": "class.aie::tile",
            "Size": 1
        },
        {
            "Name": "class.aie::detail::tile",
            "Size": 1
        },
        {
            "Name": "class.aie::vector.0",
            "Size": 64
        },
        {
            "Name": "class.aie::detail::vector_base.1",
            "Size": 64
        },
        {
            "Name": "struct.v16float",
            "Size": 64
        },
        {
            "Name": "struct.ipd.custom_type.v128int4.v128int4",
            "Size": 64
        },
        {
            "Name": "struct.v16int32",
            "Size": 64
        },
        {
            "Name": "struct.aie::unary_op.2",
            "Size": 8
        },
        {
            "Name": "struct.aie::unary_op_common.3",
            "Size": 8
        },
        {
            "Name": "struct.aie::unary_op.4",
            "Size": 32
        },
        {
            "Name": "struct.aie::unary_op_common.5",
            "Size": 32
        },
        {
            "Name": "class.aie::vector_elem_const_ref",
            "Size": 8
        },
        {
            "Name": "class.anon.8",
            "Size": 20
        },
        {
            "Name": "class.aie::accum.9",
            "Size": 64
        },
        {
            "Name": "class.aie::detail::accum_base.10",
            "Size": 64
        },
        {
            "Name": "struct.v16accfloat",
            "Size": 64
        },
        {
            "Name": "struct.ipd.custom_type.v16acc32.v16acc32",
            "Size": 64
        },
        {
            "Name": "struct.v32bfloat16",
            "Size": 64
        },
        {
            "Name": "struct.v16bfloat16",
            "Size": 32
        },
        {
            "Name": "struct.v32uint16",
            "Size": 64
        },
        {
            "Name": "struct.ipd.custom_type.uint4_t.uint4_t",
            "Size": 1
        },
        {
            "Name": "struct.ipd.custom_type.uint5_t.uint5_t",
            "Size": 1
        },
        {
            "Name": "struct.ipd.custom_type.uint1_t.uint1_t",
            "Size": 1
        },
        {
            "Name": "vector_elem_ref<float, 8U>",
            "Size": 8
        },
        {
            "Name": "matrix_vector_mul<float, float, 128U, 768U, 0U, 0U, 0U, 1U, 12U, 1U, 0U, 0U, 1U, 0U, false, true>",
            "Size": 4
        },
        {
            "Name": "accum_base<(aie::detail::AccumClass)2, 32U, 8U>",
            "Size": 32
        },
        {
            "Name": "vector_elem_const_ref<float, 8U>",
            "Size": 8
        },
        {
            "Name": "io_buffer<float, adf::direction::in, adf::io_buffer_config<adf::extents<4294967295U>, adf::locking::sync, adf::addressing::linear, adf::margin<0U> > >",
            "Size": 0
        },
        {
            "Name": "kernelMatVecMulClass<float, float, 128U, 768U, 0U, 0U, 0U, 1U, 12U, 1U, 0U, 0U, 1U, 0U, false, true>",
            "Size": 4
        },
        {
            "Name": "vector<float, 8U>",
            "Size": 32
        },
        {
            "Name": "vector_base<float, 16U>",
            "Size": 32
        },
        {
            "Name": "vector_base<float, 8U>",
            "Size": 32
        },
        {
            "Name": "accum<accfloat, 8U>",
            "Size": 32
        },
        {
            "Name": "tile",
            "Size": 0
        },
        {
            "Name": "accum_base<(aie::detail::AccumClass)2, 32U, 16U>",
            "Size": 32
        },
        {
            "Name": "vector<float, 16U>",
            "Size": 32
        },
        {
            "Name": "accum<accfloat, 16U>",
            "Size": 32
        }
    ],
    "Globals": [
        {
            "Name": "i11",
            "Size": 4,
            "SoftFloat": false
        },
        {
            "Name": "me_primitive::control_rnd",
            "MangledName": "_ZN12me_primitive11control_rndE",
            "Size": 4,
            "SoftFloat": false
        },
        {
            "Name": "__const._ZN3aie6detail10accum_baseILNS0_10AccumClassE2ELj32ELj8EE16from_vector_signIfEEvRKNS_6vectorIT_Lj8EEEbi.fn",
            "Size": 1,
            "SoftFloat": false
        },
        {
            "Name": "__const._ZN3aie6detail13mul_bits_implILNS0_10MulMacroOpE2ELj32ELj32EfLj32EfE3runILj8EJNS_5accumI8accfloatLj8EEEEEENS5_IS6_XT_EEERKNS_6vectorIfXT_EEEbSC_bDpRKT0_.mul_op",
            "Size": 1,
            "SoftFloat": false
        },
        {
            "Name": "__const._ZN3aie6detail5utils17unroll_for_helperIjLj0ELj1ELj0ELj1EE7executeIZNS0_13mul_bits_implILNS0_10MulMacroOpE2ELj32ELj32EfLj32EfE3runILj8EJNS_5accumI8accfloatLj8EEEEEENS9_ISA_XT_EEERKNS_6vectorIfXT_EEEbSG_bDpRKT0_EUlT_E_EEvOSL_.it",
            "Size": 1,
            "SoftFloat": false
        }
    ],
    "UsesCmathStaticVars": false,
    "Functions": [
        {
            "FunctionName": "xf::dsp::aie::blas::matrix_vector_mul::matrix_vector_mul<float, float, 128u, 768u, 0u, 0u, 0u, 1u, 12u, 1u, 0u, 0u, 1u, 0u, false, true>::matVecMulFirstRtp(float const (&) [8192], adf::io_buffer<float, adf::direction::in, adf::io_buffer_config<adf::extents<4294967295u>, adf::locking::sync, adf::addressing::linear, adf::margin<0u> > >&, output_cascade<accfloat, void>*)",
            "StackSize": 5556,
            "SoftFloat": true
        },
        {
            "FunctionName": "xf::dsp::aie::blas::matrix_vector_mul::T_inputIF<float, float>::T_inputIF()",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "xf::dsp::aie::blas::matrix_vector_mul::T_outputIF<float, float>::T_outputIF()",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "adf::io_buffer<float, adf::direction::in, adf::io_buffer_config<adf::extents<4294967295u>, adf::locking::sync, adf::addressing::linear, adf::margin<0u> > >::data() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "xf::dsp::aie::blas::matrix_vector_mul::kernelMatVecMulClass<float, float, 128u, 768u, 0u, 0u, 0u, 1u, 12u, 1u, 0u, 0u, 1u, 0u, false, true>::matVecMulKernel(xf::dsp::aie::blas::matrix_vector_mul::T_inputIF<float, float>, xf::dsp::aie::blas::matrix_vector_mul::T_outputIF<float, float>)",
            "StackSize": 5468,
            "SoftFloat": false
        },
        {
            "FunctionName": "xf::dsp::aie::blas::matrix_vector_mul::matrix_vector_mul<float, float, 128u, 768u, 0u, 0u, 0u, 1u, 12u, 1u, 0u, 0u, 1u, 0u, false, true>::matrix_vector_mul()",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "i11_user()",
            "StackSize": 0,
            "SoftFloat": false
        },
        {
            "FunctionName": "xf::dsp::aie::blas::matrix_vector_mul::kernelMatVecMulClass<float, float, 128u, 768u, 0u, 0u, 0u, 1u, 12u, 1u, 0u, 0u, 1u, 0u, false, true>::kernelMatVecMulClass()",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "xf::dsp::aie::blas::matrix_vector_mul::kernelMatVecMulClass<float, float, 128u, 768u, 0u, 0u, 0u, 1u, 12u, 1u, 0u, 0u, 1u, 0u, false, true>::matVecMulSelectArch(xf::dsp::aie::blas::matrix_vector_mul::T_inputIF<float, float>, xf::dsp::aie::blas::matrix_vector_mul::T_outputIF<float, float>)",
            "StackSize": 5412,
            "SoftFloat": false
        },
        {
            "FunctionName": "xf::dsp::aie::blas::matrix_vector_mul::kernelMatVecMulClass<float, float, 128u, 768u, 0u, 0u, 0u, 1u, 12u, 1u, 0u, 0u, 1u, 0u, false, true>::matVecMulBasic(xf::dsp::aie::blas::matrix_vector_mul::T_inputIF<float, float>, xf::dsp::aie::blas::matrix_vector_mul::T_outputIF<float, float>)",
            "StackSize": 5356,
            "SoftFloat": false
        },
        {
            "FunctionName": "broadcast_to_v16float(float)",
            "StackSize": 68,
            "SoftFloat": true
        },
        {
            "FunctionName": "me_detail::compute_control(int, int, int, int, int, int, int, int, int, int, int)",
            "StackSize": 44,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 8u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::operand_base_type<aie::detail::utils::remove_all<aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1> >::type>::type aie::mac<aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1>, aie::vector_elem_ref<float, 8u>, aie::vector<float, 8u> >(aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1> const&, aie::vector_elem_ref<float, 8u>, aie::vector<float, 8u> const&)",
            "StackSize": 4836,
            "SoftFloat": false
        },
        {
            "FunctionName": "void xf::dsp::aie::set_rnd_mode<0u>()",
            "StackSize": 26,
            "SoftFloat": false
        },
        {
            "FunctionName": "void xf::dsp::aie::set_sat_mode<0u>()",
            "StackSize": 26,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 8u>::vector()",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 8u>::accum()",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 8u> aie::zeros<float, 8u>()",
            "StackSize": 812,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 8u>::accum<float>(aie::vector<float, 8u> const&, int)",
            "StackSize": 259,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::operand_base_type<aie::detail::utils::remove_all<aie::accum<accfloat, 8u> >::type>::type aie::mac<aie::accum<accfloat, 8u>, aie::vector_elem_ref<float, 8u>, aie::vector<float, 8u> >(aie::accum<accfloat, 8u> const&, aie::vector_elem_ref<float, 8u>, aie::vector<float, 8u> const&)",
            "StackSize": 4924,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 8u> aie::detail::vector_base<float, 16u>::extract<8u>(unsigned int) const",
            "StackSize": 352,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 8u>::to_native() const",
            "StackSize": 40,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 8u>::operator[](unsigned int)",
            "StackSize": 44,
            "SoftFloat": false
        },
        {
            "FunctionName": "void writeincr<accfloat, 8u>(output_cascade<accfloat, void>*, aie::accum<accfloat, 8u> const&)",
            "StackSize": 804,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::set_rounding(aie::rounding_mode)",
            "StackSize": 26,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::tile::current()",
            "StackSize": 11,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::tile::set_rounding(aie::rounding_mode)",
            "StackSize": 20,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::tile::current()",
            "StackSize": 5,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::tile::tile(aie::detail::tile const&)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::tile::tile()",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::tile::set_rounding(aie::rounding_mode)",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "set_rnd(unsigned int)",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::set_saturation(aie::saturation_mode)",
            "StackSize": 26,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::tile::set_saturation(aie::saturation_mode)",
            "StackSize": 20,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::tile::set_saturation(aie::saturation_mode)",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "set_satmode(unsigned int)",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 8u>::vector_base()",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 8u>::undef()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v8float()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_storage<(aie::detail::AccumClass)2, 32u, 8u>::undef()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v8accfloat()",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::zeros_bits<32u, float, 8u>::run()",
            "StackSize": 780,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::zeros_bits_impl<32u, float, 8u>::run()",
            "StackSize": 748,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::zeros_bits_impl<32u, float, 16u>::run()",
            "StackSize": 584,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 8u> aie::vector<float, 16u>::extract<8u>(unsigned int) const",
            "StackSize": 424,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 16u>::vector()",
            "StackSize": 136,
            "SoftFloat": false
        },
        {
            "FunctionName": "broadcast_zero_to_v16float()",
            "StackSize": 324,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 16u>::vector(v16float)",
            "StackSize": 136,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_storage<float, 16u>::undef()",
            "StackSize": 128,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v16float()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "broadcast_s32(int)",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "v16float::v16float(v16int32)",
            "StackSize": 196,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 8u>::vector(aie::detail::vector_base<float, 8u> const&)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 8u> aie::detail::vector_base<float, 16u>::extract_helper<8u>(unsigned int) const",
            "StackSize": 312,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::vector_extract<8u, v16float>(v16float const&, unsigned int)",
            "StackSize": 236,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 8u>::vector_base(v8float)",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "extract_v8float(v16float, int)",
            "StackSize": 196,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::ext_xl(v16float)",
            "StackSize": 96,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::ext_xh(v16float)",
            "StackSize": 96,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::accum<accfloat, 8u>::from_vector<float>(aie::vector<float, 8u> const&, int)",
            "StackSize": 247,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u>::from_vector<float>(aie::vector<float, 8u> const&, int)",
            "StackSize": 235,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u>::from_vector_sign<float>(aie::vector<float, 8u> const&, bool, int)",
            "StackSize": 223,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u>::get_ups<float, 8u>()::{lambda(auto:1 const&, auto:2, auto:3)#1}::operator()<aie::vector<float, 8u>, int, bool>(aie::vector<float, 8u> const&, int, bool) const",
            "StackSize": 177,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 8u>::operator v8float() const",
            "StackSize": 76,
            "SoftFloat": false
        },
        {
            "FunctionName": "v8accfloat::v8accfloat(v8float)",
            "StackSize": 100,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::mac16_conf(v32bfloat16, v32bfloat16, v16accfloat, int, uint1_t, uint5_t)",
            "StackSize": 262,
            "SoftFloat": false
        },
        {
            "FunctionName": "uint1_t::uint1_t(int)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "get_fpmulmac_mask()",
            "StackSize": 10,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::addmac16_conf(v32bfloat16, v32bfloat16, v16accfloat, v16accfloat, int, uint1_t, uint5_t)",
            "StackSize": 326,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::mul16_conf(v32bfloat16, v32bfloat16, int, uint1_t, uint5_t)",
            "StackSize": 198,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 16u>::to_native() const",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 16u>::to_native() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1> aie::op_add<aie::accum<accfloat, 8u> >(aie::accum<accfloat, 8u> const&)",
            "StackSize": 108,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::operand_base_type<aie::detail::utils::remove_all<aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1> >::type>::type aie::mac<aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1>, aie::unary_op<aie::vector_elem_ref<float, 8u>, (aie::Operation)0>, aie::vector<float, 8u> >(aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1> const&, aie::unary_op<aie::vector_elem_ref<float, 8u>, (aie::Operation)0>, aie::vector<float, 8u> const&)",
            "StackSize": 4780,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op<aie::vector_elem_ref<float, 8u>, (aie::Operation)0> aie::op_none<aie::vector_elem_ref<float, 8u> >(aie::vector_elem_ref<float, 8u> const&)",
            "StackSize": 44,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::operand_base_type<aie::detail::utils::remove_all<aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1> >::type>::type aie::mac<aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1>, aie::unary_op<aie::vector_elem_ref<float, 8u>, (aie::Operation)0>, aie::unary_op<aie::vector<float, 8u>, (aie::Operation)0> >(aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1> const&, aie::unary_op<aie::vector_elem_ref<float, 8u>, (aie::Operation)0>, aie::unary_op<aie::vector<float, 8u>, (aie::Operation)0> const&)",
            "StackSize": 4692,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op<aie::vector<float, 8u>, (aie::Operation)0> aie::op_none<aie::vector<float, 8u> >(aie::vector<float, 8u> const&)",
            "StackSize": 108,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::mul_bits<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, 8u, aie::accum<accfloat, 8u> >(aie::vector_elem_const_ref<float, 8u>, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)",
            "StackSize": 4516,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::unary_op_common<aie::vector_elem_ref<float, 8u>, (aie::Operation)0>::parent1() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector_elem_const_ref<float, 8u>::vector_elem_const_ref(aie::vector_elem_ref<float, 8u> const&)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "bool aie::detail::get_mul_sign<aie::unary_op<aie::vector_elem_ref<float, 8u>, (aie::Operation)0> >(aie::unary_op<aie::vector_elem_ref<float, 8u>, (aie::Operation)0>)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op_common<aie::vector<float, 8u>, (aie::Operation)0>::parent1() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "bool aie::detail::get_mul_sign<aie::unary_op<aie::vector<float, 8u>, (aie::Operation)0> >(aie::unary_op<aie::vector<float, 8u>, (aie::Operation)0>)",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op_common<aie::accum<accfloat, 8u>, (aie::Operation)1>::parent1() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 8u> aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(float, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)",
            "StackSize": 4466,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::vector_elem_const_ref<float, 8u>::operator float() const",
            "StackSize": 356,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::accum<accfloat, 8u> aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)",
            "StackSize": 4388,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::broadcast_bits<32u, float, 8u>::run(float const&)",
            "StackSize": 628,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::utils::unroll_times<1u, aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)::{lambda(auto:1)#1}>(aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)::{lambda(auto:1)#1}&&)",
            "StackSize": 4285,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::utils::unroll_for<unsigned int, 0u, 1u, 1u, aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)::{lambda(auto:1)#1}>(aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)::{lambda(auto:1)#1}&&)",
            "StackSize": 4281,
            "SoftFloat": false
        },
        {
            "FunctionName": "void aie::detail::utils::unroll_for_helper<unsigned int, 0u, 1u, 0u, 1u>::execute<aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)::{lambda(auto:1)#1}>(aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)::{lambda(auto:1)#1}&&)",
            "StackSize": 4277,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)::{lambda(auto:1)#1}::operator()<aie::detail::utils::iteration_dim<unsigned int, 0u, 1u, 0u> >(aie::detail::utils::iteration_dim<unsigned int, 0u, 1u, 0u>) const",
            "StackSize": 4267,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::ext_bl(v16accfloat)",
            "StackSize": 96,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::ext_bh(v16accfloat)",
            "StackSize": 96,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::broadcast_bits_impl<32u, float, 8u>::run(float const&)",
            "StackSize": 592,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::broadcast_bits_impl<32u, float, 16u>::run(float const&)",
            "StackSize": 400,
            "SoftFloat": true
        },
        {
            "FunctionName": "void aie::detail::utils::unroll_for_helper<unsigned int, 0u, 1u, 1u, 1u>::execute<aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)::{lambda(auto:1)#1}>(aie::detail::mul_bits_impl<(aie::detail::MulMacroOp)2, 32u, 32u, float, 32u, float>::run<8u, aie::accum<accfloat, 8u> >(aie::vector<float, 8u> const&, bool, aie::vector<float, 8u> const&, bool, aie::accum<accfloat, 8u> const&)::{lambda(auto:1)#1}&&)",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 16u> aie::vector<float, 8u>::grow_extract<16u>(unsigned int) const",
            "StackSize": 692,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::utils::iteration_dim<unsigned int, 0u, 1u, 0u>::operator unsigned int() const",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 16u> aie::accum<accfloat, 8u>::grow_extract<16u>(unsigned int) const",
            "StackSize": 700,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 16u>::accum(v16accfloat)",
            "StackSize": 136,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 8u>& aie::accum<accfloat, 8u>::insert<8u, accfloat>(unsigned int, aie::accum<accfloat, 8u> const&)",
            "StackSize": 32,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 8u> aie::accum<accfloat, 16u>::extract<8u>(unsigned int) const",
            "StackSize": 433,
            "SoftFloat": false
        },
        {
            "FunctionName": "mac_elem_16(v16float, v16float, v16accfloat)",
            "StackSize": 3574,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 16u>::operator v16float() const",
            "StackSize": 140,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 16u>::operator v16accfloat() const",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "mac_elem_16_accuracy_fast(v16float, v16float, v16accfloat, int, int, int)",
            "StackSize": 3318,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_detail::mac_elem_16_accuracy_fast_inner(v16float, v16float, v16accfloat, int, int, int)",
            "StackSize": 3050,
            "SoftFloat": false
        },
        {
            "FunctionName": "broadcast_zero_to_v32bfloat16()",
            "StackSize": 324,
            "SoftFloat": false
        },
        {
            "FunctionName": "broadcast_one_to_v32bfloat16()",
            "StackSize": 324,
            "SoftFloat": false
        },
        {
            "FunctionName": "insert(v32bfloat16, int, v16bfloat16)",
            "StackSize": 324,
            "SoftFloat": false
        },
        {
            "FunctionName": "to_v16bfloat16(v16accfloat)",
            "StackSize": 198,
            "SoftFloat": false
        },
        {
            "FunctionName": "v16accfloat::v16accfloat(v16float)",
            "StackSize": 196,
            "SoftFloat": false
        },
        {
            "FunctionName": "msc_elem_16_2(v32bfloat16, v32bfloat16, v16accfloat)",
            "StackSize": 526,
            "SoftFloat": false
        },
        {
            "FunctionName": "addmac_elem_16_2_conf(v32bfloat16, v32bfloat16, v16accfloat, v16accfloat, int, int, int, int)",
            "StackSize": 670,
            "SoftFloat": false
        },
        {
            "FunctionName": "mac_elem_16_2_conf(v32bfloat16, v32bfloat16, v16accfloat, int, int, int)",
            "StackSize": 538,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::ext_elem_(v16float, int, int)",
            "StackSize": 72,
            "SoftFloat": true
        },
        {
            "FunctionName": "mul_elem_16_2_conf(v32bfloat16, v32bfloat16, int)",
            "StackSize": 402,
            "SoftFloat": false
        },
        {
            "FunctionName": "broadcast_u16(unsigned short)",
            "StackSize": 66,
            "SoftFloat": false
        },
        {
            "FunctionName": "v32bfloat16::v32bfloat16(v32uint16)",
            "StackSize": 196,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::upd_xl(v32bfloat16, v16bfloat16)",
            "StackSize": 160,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::upd_xh(v32bfloat16, v16bfloat16)",
            "StackSize": 160,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::srs(v16accfloat, uint4_t, uint5_t)",
            "StackSize": 98,
            "SoftFloat": false
        },
        {
            "FunctionName": "get_rnd()",
            "StackSize": 0,
            "SoftFloat": false
        },
        {
            "FunctionName": "uint4_t::uint4_t(unsigned int)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "get_fp2bf_mask()",
            "StackSize": 10,
            "SoftFloat": false
        },
        {
            "FunctionName": "uint5_t::uint5_t(unsigned int)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "uint5_t::operator unsigned int() const",
            "StackSize": 9,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 16u>::operator v16accfloat() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 16u> aie::vector<float, 8u>::grow<16u>(unsigned int) const",
            "StackSize": 620,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 16u> aie::detail::vector_base<float, 8u>::grow<16u>(unsigned int) const",
            "StackSize": 484,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 16u>::vector(aie::detail::vector_base<float, 16u> const&)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 16u>::vector_base()",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_set<float, 16u>::run(v8float const&, unsigned int)",
            "StackSize": 268,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 16u>::vector_base(v16float)",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "set_v16float(int, v8float)",
            "StackSize": 196,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::set_xl(v8float)",
            "StackSize": 96,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::set_xh(v8float)",
            "StackSize": 96,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::utils::iteration_dim<unsigned int, 0u, 1u, 0u>::current() const",
            "StackSize": 4,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 16u> aie::accum<accfloat, 8u>::grow<16u>() const",
            "StackSize": 628,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 16u> aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u>::grow<16u>() const",
            "StackSize": 496,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 16u>::accum(aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 16u> const&)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 16u>::accum_base()",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "concat(v8accfloat, v8accfloat)",
            "StackSize": 256,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 16u>::accum_base(v16accfloat)",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_storage<(aie::detail::AccumClass)2, 32u, 16u>::undef()",
            "StackSize": 128,
            "SoftFloat": false
        },
        {
            "FunctionName": "undef_v16accfloat()",
            "StackSize": 64,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::concat_bm_am(v8accfloat, v8accfloat)",
            "StackSize": 128,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u>& aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u>::insert<8u, 32u>(unsigned int, aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u> const&)",
            "StackSize": 20,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u> aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 16u>::extract<8u>(unsigned int) const",
            "StackSize": 361,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::accum<accfloat, 8u>::accum(aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u> const&)",
            "StackSize": 8,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u>::accum_base()",
            "StackSize": 68,
            "SoftFloat": false
        },
        {
            "FunctionName": "auto aie::detail::accum_extract<8u, v16accfloat>(v16accfloat const&, unsigned int)",
            "StackSize": 236,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::accum_base<(aie::detail::AccumClass)2, 32u, 8u>::accum_base(v8accfloat)",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "extract_v8accfloat(v16accfloat, int)",
            "StackSize": 196,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector_elem_const_ref<float, 8u>::get() const",
            "StackSize": 352,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::vector<float, 8u>::get(unsigned int) const",
            "StackSize": 348,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::detail::vector_base<float, 8u>::get(unsigned int) const",
            "StackSize": 340,
            "SoftFloat": true
        },
        {
            "FunctionName": "extract_elem(v16float, int)",
            "StackSize": 140,
            "SoftFloat": true
        },
        {
            "FunctionName": "aie::unary_op<aie::vector<float, 8u>, (aie::Operation)0>::unary_op_common(aie::vector<float, 8u>)",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op_common<aie::vector<float, 8u>, (aie::Operation)0>::unary_op_common(aie::vector<float, 8u>)",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op<aie::vector_elem_ref<float, 8u>, (aie::Operation)0>::unary_op_common(aie::vector_elem_ref<float, 8u>)",
            "StackSize": 24,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op_common<aie::vector_elem_ref<float, 8u>, (aie::Operation)0>::unary_op_common(aie::vector_elem_ref<float, 8u>)",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op<aie::accum<accfloat, 8u>, (aie::Operation)1>::unary_op_common(aie::accum<accfloat, 8u>)",
            "StackSize": 72,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::unary_op_common<aie::accum<accfloat, 8u>, (aie::Operation)1>::unary_op_common(aie::accum<accfloat, 8u>)",
            "StackSize": 36,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector<float, 8u>::elem_ref(unsigned int)",
            "StackSize": 28,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::vector_elem_ref<float, 8u>::vector_elem_ref(aie::vector<float, 8u>&, unsigned int)",
            "StackSize": 12,
            "SoftFloat": false
        },
        {
            "FunctionName": "aie::detail::adf::cascade_stream_helper<accfloat, 8u>::writeincr(output_cascade<accfloat, void>*, aie::accum<accfloat, 8u>)",
            "StackSize": 796,
            "SoftFloat": false
        },
        {
            "FunctionName": "writeincr(output_cascade<accfloat, void>*, v16accfloat)",
            "StackSize": 527,
            "SoftFloat": false
        },
        {
            "FunctionName": "put_mcd(v16accfloat)",
            "StackSize": 459,
            "SoftFloat": false
        },
        {
            "FunctionName": "put_mcd(v16accfloat, int)",
            "StackSize": 395,
            "SoftFloat": false
        },
        {
            "FunctionName": "put_mcd(v16acc32, int)",
            "StackSize": 199,
            "SoftFloat": false
        },
        {
            "FunctionName": "v16acc32::v16acc32(v16accfloat)",
            "StackSize": 132,
            "SoftFloat": false
        },
        {
            "FunctionName": "me_primitive::mcd_write(v16acc32, uint1_t)",
            "StackSize": 65,
            "SoftFloat": false
        }
    ]
}
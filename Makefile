############################################################################
#  project_root/Makefile  ‚îÄ  umbrella build for AIE / PL / HOST / HW_LINK
#TARGET = sw_emu | hw_emu | hw
#EMU_PS = X86 | QEMU
############################################################################

######################## ‚ñ∂ User-specific paths ‚óÄ ###########################
XILINX_VITIS  ?= /tools/Xilinx/Vitis/2024.2
EDGE_COMMON_SW ?= /home/synthara/versal_common/xilinx-versal-common-v2024.2
IMAGE     ?= $(EDGE_COMMON_SW)/Image
ROOTFS    ?= $(EDGE_COMMON_SW)/rootfs.ext4
###########################################################################

##################### Build-time variables / defaults ######################
TARGET    ?= sw_emu
EMU_PS    ?= QEMU
PLATFORM  ?= xilinx_vek280_base_202420_1
PACK_CFG  := ./pack.cfg
###########################################################################

######################  Artefacts generated by sub-trees  ##################
XO_DIR    := pl/build_$(TARGET)
XO_FILES  := $(wildcard $(XO_DIR)/*.xo)
AIE_LIB   := aie/build_$(TARGET)/libadf.a
XSA       := hw_link/design_$(TARGET).xsa
EXEC      := host/system_host
PKG_DIR   := package.$(TARGET)
XCLBIN    := $(PKG_DIR)/system_$(TARGET).xclbin
###########################################################################

SUBOPTS := TARGET=$(TARGET) EMU_PS=$(EMU_PS) PLATFORM=$(PLATFORM)

############################################################################
#  Top-level targets
############################################################################
.PHONY: all aie pl host hw_link link package run clean clean_all help
all: check_args aie pl host hw_link link package

aie:      ; $(MAKE) -C aie      $(SUBOPTS)
pl:       ; $(MAKE) -C pl       $(SUBOPTS)
host:     ; $(MAKE) -C host     $(SUBOPTS)
hw_link:  ; $(MAKE) -C hw_link  $(SUBOPTS)
link:     ; @echo "üì¶ Link complete: $(XSA)"

########################  v++ --package flags ##############################
PKG_COMMON = --platform $(PLATFORM) --package.out_dir $(PKG_DIR) \
             --package.defer_aie_run --package.sd_file $(EXEC) \
             --package.sd_dir aieml/data

ifeq ($(TARGET),sw_emu)
  ifeq ($(EMU_PS),X86)
    PKG_FLAGS = -t sw_emu
  else
    PKG_FLAGS = -t sw_emu \
      --package.rootfs $(ROOTFS) \
      --package.kernel_image $(IMAGE) \
      --config $(PACK_CFG)
  endif
else ifeq ($(TARGET),hw_emu)
  PKG_FLAGS = -t hw_emu \
      --package.rootfs $(ROOTFS) \
      --package.kernel_image $(IMAGE) \
      --config $(PACK_CFG)
else
  PKG_FLAGS = -t hw \
      --package.rootfs $(ROOTFS) \
      --package.kernel_image $(IMAGE) \
      --package.boot_mode sd \
      --config $(PACK_CFG)
endif

##############################  Package  ###################################
package: $(XCLBIN)

$(XCLBIN): $(XO_FILES) $(AIE_LIB) $(XSA) | $(PKG_DIR)
	@echo "üì¶ Packaging with:"
	@echo "    AIE_LIB  = $(AIE_LIB)"
	@echo "    XO_FILES = $(XO_FILES)"
	@echo "    XSA      = $(XSA)"
	@echo "    EXEC     = $(EXEC)"
	@echo "Packaging design created in $(PKG_DIR) as $@"
	v++ --package $(PKG_FLAGS) $(PKG_COMMON) \
		$(AIE_LIB) $(XSA) -o $@
	@echo "‚úÖ Packaged design created in $(PKG_DIR)"

$(PKG_DIR):
	@mkdir -p $@

##############################  Run helper  ################################
run: package
ifeq ($(TARGET),sw_emu)
  ifeq ($(EMU_PS),X86)
	@echo "‚ñ∂ Running SW-emulation on x86 ‚Ä¶"
	XCL_EMULATION_MODE=sw_emu $(EXEC)
  else
	@echo "‚ñ∂ Running SW-emulation on QEMU ‚Ä¶"
	$(PKG_DIR)/launch_sw_emu.sh -run-app $(EXEC)
  endif
else ifeq ($(TARGET),hw_emu)
	@echo "‚ñ∂ Running HW-emulation on QEMU ‚Ä¶"
	$(PKG_DIR)/launch_hw_emu.sh -run-app $(EXEC)
else
	@echo "‚ñ∂ Copy '$(PKG_DIR)' to SD-card and boot the VEK280."
endif

print_vars:
	@echo "TARGET   = $(TARGET)"
	@echo "AIE_LIB  = $(AIE_LIB)"
	@echo "XO_FILES = $(XO_FILES)"
	@echo "XSA      = $(XSA)"
	@echo "EXEC     = $(EXEC)"

############################  Argument check  ##############################
check_args:
ifeq ($(TARGET),$(filter $(TARGET),hw_emu hw))
  ifeq ($(EMU_PS),X86)
    $(error ‚ùå For hw_emu and hw, EMU_PS must be QEMU)
  endif
endif
	@true

################################  Clean  ###################################
clean:
	rm -rf $(PKG_DIR) build_* *.xclbin *.xsa *.log

clean_all:
	$(MAKE) -C aie      clean TARGET=$(TARGET)
	$(MAKE) -C pl       clean TARGET=$(TARGET)
	$(MAKE) -C host     clean TARGET=$(TARGET)
	$(MAKE) -C hw_link  clean TARGET=$(TARGET)
	rm -rf package.* build_* *.xclbin *.xsa *.log

help:
	@echo "Usage:"
	@echo "  make all TARGET=sw_emu EMU_PS=QEMU"
	@echo "  make package TARGET=hw"
	@echo "  make run TARGET=sw_emu EMU_PS=X86"
############################################################################
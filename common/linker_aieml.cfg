[connectivity]
# Instantiate a single shared mm2s kernel.  An AXI4-Stream switch fans the
# output of this kernel to the various AI Engine and PL sinks.
nk=mm2s_pl:1:mm2s
nk=leaky_relu_pl:2:relu,relu2
nk=leaky_splitter_pl:1:splitter
nk=s2mm_pl:1:s2mm_out
nk=axis_switch_pl:1:mm2s_switch

# --- Stream Connections ---
# mm2s -> AXI4-Stream switch
stream_connect=mm2s.s:mm2s_switch.in

# Switch outputs to the AIE/PL ports
stream_connect=mm2s_switch.out_0:ai_engine_0.layer0_in
stream_connect=mm2s_switch.out_1:ai_engine_0.weight_stream  # Enable when USE_PRELOADED_WEIGHTS=1
stream_connect=mm2s_switch.out_2:relu.bias_stream
stream_connect=mm2s_switch.out_3:relu2.bias_stream

# Feedback loop: AIE output -> leaky_relu -> splitter -> AIE input for the next layer
stream_connect=ai_engine_0.layer0_out:relu.in_stream
stream_connect=relu.out_stream:splitter.in_stream
stream_connect=splitter.out_stream_0:ai_engine_0.layer1_in_0
stream_connect=splitter.out_stream_1:ai_engine_0.layer1_in_1

# Final output from the AIE graph passes through a second LeakyReLU before
# being written to memory
stream_connect=ai_engine_0.layer1_out:relu2.in_stream
stream_connect=relu2.out_stream:s2mm_out.s



[connectivity]
# Define the number of compute units (CU) for each kernel.
# This instantiates 4 CUs of mm2s_pl, and 1 for each of the other kernels.
nk=mm2s_pl:4:mm2s_data,mm2s_weights1,mm2s_weights2_0,mm2s_weights2_1
nk=leaky_relu_pl:1:relu
nk=leaky_splitter_pl:1:splitter
nk=s2mm_pl:1:s2mm_out

# --- Stream Connections ---

# Layer 1: Data and weights streamed from memory into the AIE graph for dense8x128
stream_connect=mm2s_data.s:ai_engine_0.pl_in_dense1
stream_connect=mm2s_weights1.s:ai_engine_0.pl_w_dense1

# Feedback loop: AIE output -> leaky_relu -> splitter -> AIE input for the next layer
stream_connect=ai_engine_0.pl_out_dense1:relu.in_stream
stream_connect=relu.out_stream:splitter.in_stream
stream_connect=splitter.out_stream_0:ai_engine_0.pl_in_dense2_0
stream_connect=splitter.out_stream_1:ai_engine_0.pl_in_dense2_1

# Layer 2: Weights streamed from memory into the AIE graph dense128x128
stream_connect=mm2s_weights2_0.s:ai_engine_0.pl_w_dense2_0
stream_connect=mm2s_weights2_1.s:ai_engine_0.pl_w_dense2_1

# Final output from the AIE graph is streamed to memory output from dense128x128
stream_connect=ai_engine_0.pl_out_dense2:s2mm_out.s
